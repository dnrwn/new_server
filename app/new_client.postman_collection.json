{
	"info": {
		"_postman_id": "c8895e65-3a8e-456e-b95c-f17f24f40e54",
		"name": "new_client",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27845631"
	},
	"item": [
		{
			"name": "select_valid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let response = pm.response.json(); // response 변수\r",
							"response.case_name = pm.info.requestName; //send 시 Case Name 전달\r",
							"\r",
							"pm.sendRequest\r",
							"(\r",
							"    {\r",
							"        url: 'http://localhost:3000/launches', // 파일이 저장될 Server IP\r",
							"        method: 'POST',\r",
							"        header: {\r",
							"            'Content-Type': 'application/JSON'\r",
							"        }, \r",
							"        body: {\r",
							"            mode: 'raw',\r",
							"            raw: response\r",
							"        }\r",
							"    },\r",
							"    function (err, res) {\r",
							"        console.log(res)\r",
							"    }\r",
							")\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "192.168.68.58:70/func_1?idx=1",
					"host": [
						"192",
						"168",
						"68",
						"58"
					],
					"port": "70",
					"path": [
						"func_1"
					],
					"query": [
						{
							"key": "idx",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "select_invalid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let response = pm.response.json(); // response 변수\r",
							"response.case_name = pm.info.requestName; //send 시 Case Name 전달\r",
							"\r",
							"pm.sendRequest\r",
							"(\r",
							"    {\r",
							"        url: 'http://localhost:3000/launches', // 파일이 저장될 Server IP\r",
							"        method: 'POST',\r",
							"        header: {\r",
							"            'Content-Type': 'application/JSON'\r",
							"        }, \r",
							"        body: {\r",
							"            mode: 'raw',\r",
							"            raw: response\r",
							"        }\r",
							"    },\r",
							"    function (err, res) {\r",
							"        console.log(res)\r",
							"    }\r",
							")\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "192.168.68.58:70/func_1",
					"host": [
						"192",
						"168",
						"68",
						"58"
					],
					"port": "70",
					"path": [
						"func_1"
					]
				}
			},
			"response": []
		},
		{
			"name": "update_valid",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let response = pm.response; // 변수 선언 \r",
							"console.log(response)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"idx\": \"99\",\r\n    \"input_1\" : \"aa\",\r\n    \"input_2\" : \"wwww\"\r\n}"
				},
				"url": {
					"raw": "192.168.68.58:70/func_1",
					"host": [
						"192",
						"168",
						"68",
						"58"
					],
					"port": "70",
					"path": [
						"func_1"
					]
				}
			},
			"response": []
		},
		{
			"name": "update_invalid",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let response = pm.response; // 변수 선언 \r",
							"console.log(response)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"input_1\" : \"aa\",\r\n    \"input_2\" : \"wwww\"\r\n}"
				},
				"url": {
					"raw": "192.168.68.58:70/func_1",
					"host": [
						"192",
						"168",
						"68",
						"58"
					],
					"port": "70",
					"path": [
						"func_1"
					]
				}
			},
			"response": []
		},
		{
			"name": "insert_vaild",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let response = pm.response; // 변수 선언\r",
							"console.log('hihihi')\r",
							"console.log(response)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"input_1\" : \"333333333333333333\",\r\n    \"input_2\" : \"aa\"\r\n}"
				},
				"url": {
					"raw": "192.168.68.58:70/func_2",
					"host": [
						"192",
						"168",
						"68",
						"58"
					],
					"port": "70",
					"path": [
						"func_2"
					]
				}
			},
			"response": []
		},
		{
			"name": "insert_invalid",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let response = pm.response; // 변수 선언\r",
							"console.log('hihihi')\r",
							"console.log(response)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"input_2\" : \"aa\"\r\n}"
				},
				"url": {
					"raw": "192.168.68.58:70/func_2",
					"host": [
						"192",
						"168",
						"68",
						"58"
					],
					"port": "70",
					"path": [
						"func_2"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"let response = pm.response.json(); // response 변수",
					"response.case_name = pm.info.requestName; //send 시 Case Name 전달",
					"",
					"pm.sendRequest",
					"(",
					"    {",
					"        url: 'http://localhost:3000/launches', // 파일이 저장될 Server IP",
					"        method: 'POST',",
					"        header: {",
					"            'Content-Type': 'application/JSON'",
					"        }, ",
					"        body: {",
					"            mode: 'raw',",
					"            raw: response",
					"        }",
					"    },",
					"    function (err, res) {",
					"        console.log(res)",
					"    }",
					")",
					""
				]
			}
		}
	]
}